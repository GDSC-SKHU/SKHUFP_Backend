jwt:
  secret:
    access: ${JWT_ACCESS_SECRET}
    refresh: ${JWT_REFRESH_SECRET}

cors:
  allowed-origins: "*"

---
# 개발 환경
spring:
  # 데이터 소스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/test_db
    username: user
    password: user
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: jdbc:mysql://localhost:3306/test_db
      username: user
      password: user
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true
  # JPA 설정
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        show_sql: true
        format_sql: true
        use_sql_comments: true
  config:
    activate:
      on-profile: development
  data:
    redis:
      host: localhost
      port: 6379

logging:
  level:
    org:
      hibernate:
        type: trace
        stat: debug
        orm:
          jdbc:
            bind: trace

---

# 배포 환경
spring:
  # 데이터 소스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${RDS_JDBC_URL}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${RDS_JDBC_URL}
      username: ${RDS_USERNAME}
      password: ${RDS_PASSWORD}
      driver-class-name: ${spring.datasource.driver-class-name}
      data-source-properties:
        rewriteBatchedStatements: true
  # JPA 설정
  jpa:
    generate-ddl: true
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
  config:
    activate:
      on-profile: production
  data:
    redis:
      host: test-redis
      port: 6379
  devtools:
    livereload:
      enabled: off